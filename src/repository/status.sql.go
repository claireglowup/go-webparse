// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: status.sql

package repository

import (
	"context"
)

const insertStatus = `-- name: InsertStatus :one
INSERT INTO status (
    id_status,
    nama_status
) VALUES (
    $1,$2
) RETURNING id_status, nama_status
`

type InsertStatusParams struct {
	IDStatus   string `json:"id_status"`
	NamaStatus string `json:"nama_status"`
}

func (q *Queries) InsertStatus(ctx context.Context, arg InsertStatusParams) (Status, error) {
	row := q.db.QueryRowContext(ctx, insertStatus, arg.IDStatus, arg.NamaStatus)
	var i Status
	err := row.Scan(&i.IDStatus, &i.NamaStatus)
	return i, err
}

const updateStatus = `-- name: UpdateStatus :exec
UPDATE status
SET nama_status = $1
WHERE id_status = $2
`

type UpdateStatusParams struct {
	NamaStatus string `json:"nama_status"`
	IDStatus   string `json:"id_status"`
}

func (q *Queries) UpdateStatus(ctx context.Context, arg UpdateStatusParams) error {
	_, err := q.db.ExecContext(ctx, updateStatus, arg.NamaStatus, arg.IDStatus)
	return err
}
